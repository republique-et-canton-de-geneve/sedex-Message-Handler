/*
 * $Id$
 *
 * Copyright 2013 by Swiss Federal Administration
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of the Swiss Federal Administration. ("Confidential Information").  You
 * shall not disclose such Confidential Information and shall use
 * it only in accordance with the terms of the license agreement
 * you entered into with the Swiss Federal Administration.
 */
package ch.admin.suis.msghandler.util;

import ch.admin.suis.msghandler.common.Message;
import java.io.IOException;
import java.text.MessageFormat;
import org.xml.sax.SAXException;

/**
 * Generates a serialized "Receipt" object as xml string. See: http://www.ech.ch/xmlns/eCH-0090/1
 * 
 * @author kb
 * @author $Author$
 * @version $Revision$
 * @since 04.01.2013
 */
public final class ReceiptXmlGenerator {

  /* Example Receipt
   <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
   <!-- receipt generated by Open eGov MessageHandler -->
   <receipt xmlns="http://www.ech.ch/xmlns/eCH-0090/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0">
   <eventDate>2013-01-08T08:49:00.38+01:00</eventDate>
   <statusCode>100</statusCode>
   <statusInfo>Message successfully transmitted</statusInfo>
   <messageId>95b29548-8482-48d7-801d-1901fa8bf204</messageId>
   <messageType>10003</messageType>
   <messageClass>0</messageClass>
   <senderId>7-4-4</senderId>
   <recipientId>7-4-2</recipientId>
   </receipt>
   */
  private static final String RECEIPT_TEMPLATE = "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n"
          + "<!-- receipt generated by Open eGov MessageHandler -->\n"
          + "<receipt xmlns=\"http://www.ech.ch/xmlns/eCH-0090/1\" "
          + "xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" "
          + "version=\"1.0\">\n"
          + " <eventDate>{0}</eventDate>\n"
          + " <statusCode>100</statusCode>\n"
          + " <statusInfo>Message successfully transmitted</statusInfo>\n"
          + " <messageId>{1}</messageId>\n"
          + " <messageType>{2}</messageType>\n"
          + " <messageClass>0</messageClass>\n"
          + " <senderId>{3}</senderId>\n"
          + " <recipientId>{4}</recipientId>\n"
          + "</receipt>";

  private ReceiptXmlGenerator() {
  }

  /**
   * Generates a success receipt file for a message. Returns the xml string. Already validated.
   * 
   * @param message
   * @param recipientId
   * @return
   * @throws SAXException
   * @throws IOException 
   */
  public static String generateSuccess(Message message, String recipientId) throws SAXException, IOException {

    String xmlString = MessageFormat.format(RECEIPT_TEMPLATE, message.getEventDate(), message.getMessageId(),
            Integer.toString(message.getMessageType().getType()), message.getSenderId(), recipientId);
    
    XMLValidator.validateEch0090_1(xmlString);
    return xmlString;
  }
}
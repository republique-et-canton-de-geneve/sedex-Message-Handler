<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.ge.sedex</groupId>
	<artifactId>sedex-message-handler</artifactId>
	<!-- <artifactId>open-egov-msghandler</artifactId> -->
	<!--Version based on Glue Software version 3.3.3 -->
	<version>3.4.12-SNAPSHOT</version>

	<name>${project.build.finalName}</name>
	<description>Open eGov Message Handler for Sedex adapter</description>

	<organization>
		<name>État de Genève - DGSIN</name>
		<url>http://www.ge.ch/dgsi</url>
	</organization>

	<scm>
		<connection>scm:git:***REMOVED***/sedex-Message-Handler.git</connection>
		<developerConnection>
            scm:git:***REMOVED***/sedex-Message-Handler.git
        </developerConnection>
		<url>***REMOVED***/sedex-Message-Handler.git</url>
		<tag>HEAD</tag>
	</scm>

	<licenses>
		<license>
			<name>GNU General Public License, Version 2</name>
			<url>http://www.gnu.org/licenses/gpl.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<issueManagement>
		<system>JIRA</system>
		<url>***REMOVED***/browse/SEDEX</url>
	</issueManagement>

	<distributionManagement>
		<repository>
			<id>internal.project.release</id>
			<url>***REMOVED***/content/repositories/project_release</url>
		</repository>
		<snapshotRepository>
			<id>internal.project.snapshot</id>
			<url>***REMOVED***/content/repositories/project_snapshot</url>
		</snapshotRepository>
	</distributionManagement>

	<ciManagement>
		<system>jenkins</system>
		<url>***REMOVED***/job/Sedex_Message_Handler</url>
	</ciManagement>

	<properties>
		<install-file.phase>clean</install-file.phase>
		<install-file.resource.path>src/toImport</install-file.resource.path>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.jacoco.reportPaths>src/distribution/jacoco/jacoco.exec</sonar.jacoco.reportPaths>
		<sonar.junit.reportPaths>src/distribution/surefire-reports</sonar.junit.reportPaths>
		<sonar.projectKey>sedex-message-handler</sonar.projectKey>
		<sonar.projectName>Sedex Message Handler</sonar.projectName>
		<wrapper.version>3.5.34</wrapper.version>
		<disableDoclint />
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>animal-sniffer-annotations</artifactId>
				<version>1.14</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>aopalliance</groupId>
				<artifactId>aopalliance</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>2.2.2</version>
			</dependency>
			<dependency>
				<groupId>org.checkerframework</groupId>
				<artifactId>checker-compat-qual</artifactId>
				<version>2.0.0</version>
			</dependency>

			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.2</version>
			</dependency>

			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.6</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.6</version>
			</dependency>

			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.10.1</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Dependencies that were in the missing POM file. -->

		<!-- BouncyCastle -->
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>1.59</version>
		</dependency>

		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpkix-jdk15on</artifactId>
			<version>1.59</version>
		</dependency>


		<!-- iText for PDF handling -->
		<!--<dependency>-->
		<!--	<groupId>itext</groupId>-->
		<!--	<artifactId>itext</artifactId>-->
		<!--	<version>2.1.7</version>-->
		<!--	<type>jar</type>-->
		<!--</dependency>-->

		<!-- Apache Jempbox -->
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>jempbox</artifactId>
			<version>1.8.16</version>
			<type>jar</type>
		</dependency>

		<!-- End of custom libs added -->

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.1</version>
			<scope>compile</scope>
		</dependency>

		<!-- Sign library -->
		<dependency>
			<groupId>ch.admin.suis</groupId>
			<artifactId>suis-batchsigner</artifactId>
			<version>1.7.0</version>
			<scope>system</scope> <systemPath>${pom.basedir}/src/toImport/suis-batchsigner-1.7.0.jar</systemPath>
			<type>jar</type>
			<exclusions>
				<exclusion>
					<groupId>groovy</groupId>
					<artifactId>groovy-all</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>ch.admin.suis.security.tools</groupId>
			<artifactId>suis-security-tools</artifactId>
			<version>2.4.0</version>
			<scope>system</scope> <systemPath>${pom.basedir}/src/toImport/suis-security-tools-2.4.0.jar</systemPath>
		</dependency>

		<!-- Tanuki wrapper -->
		<dependency>
			<groupId>tanukisoft</groupId>
			<artifactId>wrapper</artifactId>
			<version>${wrapper.version}</version>
			<scope>system</scope> <systemPath>${pom.basedir}/src/toImport/wrapper-${wrapper.version}.jar</systemPath>
			<type>jar</type>
		</dependency>



		<!-- Quartz -->
		<dependency>
			<groupId>quartz</groupId>
			<artifactId>quartz</artifactId>
			<version>1.6.0</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
			<type>jar</type>
		</dependency>

		<!-- Jetty -->
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>6.1.26</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>9.4.18.v20190429</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>9.4.18.v20190429</version>
		</dependency>

<!-- 		<dependency> -->
<!-- 			<groupId>org.eclipse.jetty</groupId> -->
<!-- 			<artifactId>jetty-server</artifactId> -->
<!-- 			<version>9.4.14.v20181114</version> -->
<!-- 			<type>jar</type> -->
<!-- 		</dependency> -->

		<!-- groovy -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.4.15</version>
			<type>jar</type>
		</dependency>

		<!-- logging -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<type>jar</type>
		</dependency>

		<!-- Joda time library -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<type>jar</type>
		</dependency>

		<!-- jakarta commons -->

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-dbutils</groupId>
			<artifactId>commons-dbutils</artifactId>
			<version>1.7</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.3</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.2</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>

		<dependency>
			<groupId>com.google.errorprone</groupId>
			<artifactId>error_prone_annotations</artifactId>
			<version>2.1.3</version>
		</dependency>

		<dependency>
			<groupId>com.sun.xml.fastinfoset</groupId>
			<artifactId>FastInfoset</artifactId>
			<version>1.2.15</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>23.6-android</version>
		</dependency>

		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>4.2.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-multibindings</artifactId>
			<version>4.2.0</version>
		</dependency>

		<dependency>
			<groupId>com.sun.istack</groupId>
			<artifactId>istack-commons-runtime</artifactId>
			<version>3.0.7</version>
		</dependency>

		<dependency>
			<groupId>com.google.j2objc</groupId>
			<artifactId>j2objc-annotations</artifactId>
			<version>1.1</version>
		</dependency>

		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.1</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>2.3.1</version>
		</dependency>

		<dependency>
			<groupId>rhino</groupId>
			<artifactId>js</artifactId>
			<version>1.7R2</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>1.3.9</version>
		</dependency>

		<dependency>
			<groupId>org.verapdf</groupId>
			<artifactId>metadata-fixer</artifactId>
			<version>1.10.4</version>
		</dependency>

		<dependency>
			<groupId>org.verapdf</groupId>
			<artifactId>pdf-model</artifactId>
			<version>1.10.1</version>
		</dependency>

		<dependency>
			<groupId>xalan</groupId>
			<artifactId>serializer</artifactId>
			<version>2.7.1</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.22</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.22</version>
		</dependency>

		<dependency>
			<groupId>ch.glue</groupId>
			<artifactId>openpdf-glue</artifactId>
			<version>1.0.6.2</version>
			<scope>system</scope> <systemPath>${pom.basedir}/src/toImport/openpdf-glue-1.0.6.2.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>org.verapdf</groupId>
			<artifactId>verapdf-xmp-core</artifactId>
			<version>0.12.1</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.woodstox</groupId>
			<artifactId>stax2-api</artifactId>
			<version>3.1.4</version>
		</dependency>

		<dependency>
			<groupId>javax.xml.stream</groupId>
			<artifactId>stax-api</artifactId>
			<version>1.0-2</version>
		</dependency>


		<dependency>
			<groupId>org.jvnet.staxex</groupId>
			<artifactId>stax-ex</artifactId>
			<version>1.8</version>
		</dependency>

		<dependency>
			<groupId>javanet</groupId>
			<artifactId>staxutils</artifactId>
			<version>20070216</version>
			<scope>system</scope> <systemPath>${pom.basedir}/src/toImport/stax-utils-20070216.jar</systemPath>
		</dependency>


		<dependency>
			<groupId>org.apache.santuario</groupId>
			<artifactId>xmlsec</artifactId>
			<version>2.0.9</version>
		</dependency>


		<dependency>
			<groupId>org.verapdf</groupId>
			<artifactId>validation-model</artifactId>
			<version>1.10.4</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.woodstox</groupId>
			<artifactId>woodstox-core-asl</artifactId>
			<version>4.4.1</version>
		</dependency>

		<dependency>
			<groupId>com.googlecode.xades4j</groupId>
			<artifactId>xades4j</artifactId>
			<version>1.4.1</version>
		</dependency>



		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>txw2</artifactId>
			<version>2.3.1</version>
		</dependency>



		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.10</version>
			<type>jar</type></dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<type>jar</type>
		</dependency>

		<!-- Hypersonic DB -->
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.10</version>
			<type>jar</type>
		</dependency>

		<!-- FOP -->
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>fop</artifactId>
			<version>2.2</version>
			<exclusions>
				<!-- need to exclude servlet-api -->
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-io</groupId>
					<artifactId>commons-io</artifactId>
				</exclusion>
			</exclusions>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-dom</artifactId>
			<version>1.10</version>
		</dependency>
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>fontbox</artifactId>
			<version>2.0.11</version>
		</dependency>


		<!-- explicitly required because of fop-0.9.3 -->
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.7.2</version>
			<optional>true</optional>
		</dependency>

		<!-- explicitly required because of fop-0.9.3 -->
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.12.0</version>
			<optional>true</optional>
		</dependency>

		<!-- explicitly required because of fop-0.9.3 -->
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>1.4.01</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>ch.glue</groupId>
			<artifactId>file-encryptor</artifactId>
			<version>1.0.2</version>
			<!-- <scope>system</scope> <systemPath>${project.basedir}/src/main/resources/lib/file-encryptor-YDP-1.0.1-rc1.jar</systemPath> -->
		</dependency>

		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.27.0</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<resources>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<filtering>false</filtering>
				<directory>src/test/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
			<testResource>
				<filtering>false</filtering>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		<plugins>
			<!-- Some files (JARs and POMs) are not available in the Maven Central
				repository. They are provided with the sources and installed here into your
				Maven local repository. They have been obtained by downloading the latest
				binary version of the application at URL http://www.e-service.admin.ch/wiki/display/openegovdocfr/MessageHandler+Download,
				except file wrapper-windows-x86-32-XXX.zip which has been downloaded at URL
				https://download.tanukisoftware.com/wrapper. -->
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
				<version>3.0.0-M1</version>
				<executions>
					<execution>
						<id>install-file-encryptor</id>
						<phase>${install-file.phase}</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${install-file.resource.path}/file-encryptor-1.0.2.jar</file>
							<pomFile>${install-file.resource.path}/file-encryptor-1.0.2.pom</pomFile>
							<groupId>ch.glue</groupId>
							<artifactId>file-encryptor</artifactId>
							<version>1.0.2</version>
							<packaging>jar</packaging>
						</configuration>
					</execution>
					<execution>
						<id>install-groovy-all</id>
						<phase>${install-file.phase}</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${install-file.resource.path}/groovy-all-2.4.15.jar</file>
							<groupId>groovy</groupId>
							<artifactId>groovy-all</artifactId>
							<version>2.4.15</version>
							<packaging>jar</packaging>
						</configuration>
					</execution>
					<execution>
						<id>install-itext</id>
						<phase>${install-file.phase}</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${install-file.resource.path}/itext-2.1.7.jar</file>
							<groupId>itext</groupId>
							<artifactId>itext</artifactId>
							<version>2.1.7</version>
							<packaging>jar</packaging>
						</configuration>
					</execution>
					<execution>
						<id>install-suis-batchsigner</id>
						<phase>${install-file.phase}</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${install-file.resource.path}/suis-batchsigner-1.7.0.jar</file>
							<pomFile>${install-file.resource.path}/suis-batchsigner-1.7.0.pom</pomFile>
							<groupId>ch.admin.suis</groupId>
							<artifactId>suis-batchsigner</artifactId>
							<version>1.7.0</version>
							<packaging>jar</packaging>
						</configuration>
					</execution>
					<execution>
						<id>install-suis-security-tools</id>
						<phase>${install-file.phase}</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${install-file.resource.path}/suis-security-tools-2.4.0.jar</file>
							<pomFile>${install-file.resource.path}/suis-security-tools-2.4.0.pom</pomFile>
							<groupId>ch.admin.suis.security.tools</groupId>
							<artifactId>suis-security-tools</artifactId>
							<version>2.4.0</version>
							<packaging>jar</packaging>
						</configuration>
					</execution>
					<execution>
						<id>install-openpdf-glue</id>
						<phase>${install-file.phase}</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${install-file.resource.path}/openpdf-glue-1.0.6.2.jar</file>
							<pomFile>${install-file.resource.path}/openpdf-glue-1.0.6.2.pom</pomFile>
							<groupId>ch.admin.tool</groupId>
							<artifactId>openpdf-glue</artifactId>
							<version>1.0.6.2</version>
							<packaging>jar</packaging>
						</configuration>
					</execution>
					<execution>
						<id>install-wrapper</id>
						<phase>${install-file.phase}</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${install-file.resource.path}/wrapper-${wrapper.version}.jar</file>
							<groupId>tanukisoft</groupId>
							<artifactId>wrapper</artifactId>
							<version>${wrapper.version}</version>
							<packaging>jar</packaging>
						</configuration>
					</execution>
					<execution>
						<id>install-wrapper-windows</id>
						<phase>${install-file.phase}</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${install-file.resource.path}/wrapper-windows-x86-32-${wrapper.version}.zip</file>
							<groupId>tanukisoft</groupId>
							<artifactId>wrapper-windows-x86-32</artifactId>
							<version>${wrapper.version}</version>
							<packaging>zip</packaging>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<descriptors>
						<descriptor>assembly-src.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<!-- unpacks the wrapper, but places in wrong directory -->
					<execution>
						<id>unpack-dependencies-windows-x86-32</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includeArtifactIds>wrapper-windows-x86-32</includeArtifactIds>
							<includes>wrapper-windows-x86-32-${wrapper.version}/lib/wrapper.dll,wrapper-windows-x86-32-${wrapper.version}/bin/wrapper.exe</includes>
						</configuration>
					</execution>
					<!-- Copy project deps. to lib -->
					<execution>
						<id>copy-dependencies</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<excludeArtifactIds>wrapper-windows-x86-32</excludeArtifactIds>
						</configuration>
					</execution>
					<execution>
						<id>classpath-windows</id>
						<goals>
							<goal>build-classpath</goal>
						</goals>
						<configuration>
							<includeScope>compile</includeScope>
							<excludeArtifactIds>ant-optional,avalon-framework,jdom,xalan,xml-apis,wrapper-windows-x86-32</excludeArtifactIds>
							<excludeGroupIds>javax.servlet</excludeGroupIds>
							<outputFile>${project.build.directory}/bin/classpath_windows</outputFile>
							<prefix>lib</prefix>
							<regenerateFile>true</regenerateFile>
							<pathSeparator>;</pathSeparator>
							<fileSeparator>\\</fileSeparator>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.shared</groupId>
						<artifactId>maven-filtering</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/msi-content</outputDirectory>
							<resources>
								<!-- alles aus dem Windows-Assembly -->
								<resource>
									<directory>${project.build.directory}/open-egov-msghandler-${project.version}-windows-x86-32/open-egov-msghandler-${project.version}</directory>
									<targetPath />
									<filtering>false</filtering>
									<excludes>
										<!-- diese wird vom MSI erstellt -->
										<exclude>*/config.xml</exclude>
										<!-- für das MSI ein anderes nehmen und dann umbenennen -->
										<exclude>*/wrapper.conf</exclude>
									</excludes>
								</resource>

								<!-- für die wrapper.conf gibt es zwei Versionen. Einmal mit speziellem 
									User und einmal ohne. Das MSI kopiert dann das entsprechende File an den 
									richtigen Ort -->
								<resource>
									<!-- ohne speziellen User -->
									<directory>installer/windows-x86-32/resources/wrapper.conf.LocalSystemUser</directory>
									<targetPath>conf/wrapper.conf.LocalSystemUser</targetPath>
									<filtering>false</filtering>
									<includes>
										<include>wrapper.conf</include>
									</includes>
								</resource>
								<resource>
									<!-- mit speziellen User -->
									<directory>installer/windows-x86-32/resources/wrapper.conf.SpecificUser</directory>
									<targetPath>conf/wrapper.conf.SpecificUser</targetPath>
									<filtering>false</filtering>
									<includes>
										<include>wrapper.conf</include>
									</includes>
								</resource>
								<resource>
									<!-- ein leeres, damit die Referenzen funktionieren -->
									<directory>installer/windows-x86-32/resources</directory>
									<targetPath>conf</targetPath>
									<filtering>false</filtering>
									<includes>
										<include>wrapper.conf</include>
									</includes>
								</resource>

								<!-- Logfile, damit das bei der Deinstallation auch entfernt wird -->
								<resource>
									<directory>installer/windows-x86-32/resources</directory>
									<targetPath>log</targetPath>
									<filtering>false</filtering>
									<includes>
										<include>wrapper.log</include>
										<include>message-handler.log</include>
										<include>message-handler.prot</include>
									</includes>
								</resource>

								<!-- JRE -->
								<resource>
									<directory>installer/windows-x86-32/resources/jre1.8.0u152_x32</directory>
									<targetPath>jre</targetPath>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!-- Copies the non-source dependencies to the right folder, except 
						the bin folder -->
					<execution>
						<id>prepare-binary-version-non-source-step</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
									<excludes>
										<exclude>bin/wrapper.exe</exclude>
										<exclude>lib/wrapper.dll</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!-- Copies the few files that are not supposed to be touched by the 
						filtering system -->
					<execution>
						<id>prepare-binary-copy-wrapper-dot-exe</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/distribution/dependency/wrapper-windows-x86-32-${wrapper.version}</directory>
									<filtering>false</filtering>
									<includes>
										<include>bin/wrapper.exe</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!-- Copies the wrapper.dll to the right place -->
					<execution>
						<id>prepare-binary-copy-wrapper-dot-dll</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib/native</outputDirectory>
							<resources>
								<resource>
									<directory>src/distribution/dependency/wrapper-windows-x86-32-${wrapper.version}/lib</directory>
									<filtering>false</filtering>
									<includes>
										<include>wrapper.dll</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
					<outputDirectory>./src/distribution/lib</outputDirectory>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.4.0.905</version>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.0</version>
				<configuration>
					<append>true</append>
					<destFile>${sonar.jacoco.reportPaths}</destFile>
				</configuration>
				<executions>
					<execution>
						<id>agent-for-unit-tests</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<showPackage>false</showPackage>
							<additionalparam>-tag inheritDoc:X ${disableDoclint}</additionalparam>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<showPackage>false</showPackage>
					<additionalparam>-tag inheritDoc:X ${disableDoclint}</additionalparam>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- build profiles -->
		<profile>
			<id>windows-x86-32</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<dependencies>
				<!-- Tanuki wrapper distribution -->
				<dependency>
					<groupId>tanukisoft</groupId>
					<artifactId>wrapper-windows-x86-32</artifactId>
					<version>${wrapper.version}</version>
					<type>zip</type>
					<scope>provided</scope>
				</dependency>
			</dependencies>

			<build>
				<directory>./src/distribution</directory>
			</build>
		</profile>
		<profile>
			<id>disable-java8-doclint</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<properties>
				<!-- set property if >= java 8 -->
				<disableDoclint>-Xdoclint:none</disableDoclint>
			</properties>
		</profile>
	</profiles>

</project>
